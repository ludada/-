//
//  StoreView.m
//  FasterRunner
//
//  Created by HLKJ on 15-4-27.
//  Copyright (c) 2015年 HLKJ. All rights reserved.
//

#import "StoreView.h"
#import "GlobalMacro.h"
#import "UIImageView+WebCache.h"
#import "UIButton+WebCache.h"
#import "StoreTableViewCell.h"
#import "TypeModle.h"
#import "picModel.h"
@implementation StoreView
- (instancetype)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        self.buttonArray = [NSMutableArray array];
    }
    return self;
}

- (void)createStoreView
{
    [self createMyScrollView];
}



/**
 *  创建scrollView
 */
- (void)createMyScrollView
{

    UIView *myView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 160)];
    [myView setBackgroundColor:[UIColor whiteColor]];
    [self addSubview:myView];
    
    //滚动视图
    self.scroll = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, myView.frame.size.height)];
    [self.scroll setBackgroundColor:[UIColor orangeColor]];
    [self.scroll setContentSize:CGSizeMake(SCREEN_WIDTH * 5, myView.frame.size.height)];
    self.scroll.pagingEnabled = YES;
    self.scroll.delegate = self;
    [myView addSubview:self.scroll];
    
    
    
    self.page = [[UIPageControl alloc] initWithFrame:CGRectMake((SCREEN_WIDTH - 50)/2, self.scroll.frame.size.height - 40, 50, 40)];
    [self.page setNumberOfPages:3];
    [self.page setBackgroundColor:[UIColor clearColor]];
    [self.page setPageIndicatorTintColor:[UIColor whiteColor]];
    [self.page setCurrentPageIndicatorTintColor:[UIColor blackColor]];
    [myView addSubview:self.page];

    
}

#pragma mark - 通过set方法  给scroll赋值
- (void)setPicArray:(NSMutableArray *)picArray
{
    _picArray = picArray;
    [self getMyData];
}


/**
 *  给scrollView放上图片
 */
- (void)getMyData
{
    
    [self.page setNumberOfPages:self.picArray.count];
    [self.scroll setContentSize:CGSizeMake(SCREEN_WIDTH * (self.picArray.count + 1), self.scroll.frame.size.height)];
    //添加图片
    for (int i = 0; i <= self.picArray.count; i++) {
        if (i == self.picArray.count) {
            UIButton *image = [[UIButton alloc] initWithFrame:CGRectMake(i * SCREEN_WIDTH, 0, SCREEN_WIDTH, self.scroll.frame.size.height)];
            picModel *model = [self.picArray objectAtIndex:0];
            [image setImageWithURL:[NSURL URLWithString:model.linkUrl] forState:UIControlStateNormal placeholderImage:nil options:SDWebImageRetryFailed];
            [self.scroll addSubview:image];
            
        }
        else
        {
            UIButton *image = [[UIButton alloc] initWithFrame:CGRectMake(i * SCREEN_WIDTH, 0, SCREEN_WIDTH, self.scroll.frame.size.height)];

            picModel *model = [self.picArray objectAtIndex:i];
            [image setImageWithURL:[NSURL URLWithString:model.linkUrl] forState:UIControlStateNormal placeholderImage:nil options:SDWebImageRetryFailed];
            [self.scroll addSubview:image];
        }
    }
    
    
}
//设置定时器
- (void)setTimer
{
    self.timer = [NSTimer scheduledTimerWithTimeInterval:3 target:self selector:@selector(toScroll) userInfo:nil repeats:YES];
}
//移除定时器
- (void)removeTimer
{
    [self.timer invalidate];
}

- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView
{
    //开始拖拽的时候 移除计时器
    [self removeTimer];
}

- (void)toScroll
{
    NSInteger page = self.page.currentPage;
//    NSLog(@"%ld",page);
    if (page == self.picArray.count - 1) {
        page = self.picArray.count;
    }
    else
    {
        page ++;
    }
    CGFloat x = page * SCREEN_WIDTH;
    [self.scroll setContentOffset:CGPointMake(x, 0) animated:YES];//滑到下一个,直到添加的那个
}
- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    self.page.currentPage = (CGFloat)(self.scroll.contentOffset.x + SCREEN_WIDTH/2)/SCREEN_WIDTH;
    if (self.page.currentPage > (self.picArray.count - 1)) {
        self.page.currentPage = 0;
    }
    if (self.scroll.contentOffset.x >= SCREEN_WIDTH * self.picArray.count) {
        [self.scroll setContentOffset:CGPointMake(0, 0)];//还原到第一个
    }
}

#pragma mark - 获取类型数组数据
- (void)setTypeArray:(NSMutableArray *)typeArray
{
    _typeArray = typeArray;
    [self createMyTableView];
}

- (void)createMyTableView
{
    UIButton *myView = [[UIButton alloc] initWithFrame:CGRectMake(5, self.scroll.frame.origin.y + self.scroll.frame.size.height + 5, SCREEN_WIDTH - 10, 30)];
    [myView setImage:[UIImage imageNamed:@"login"] forState:UIControlStateNormal];
    myView.layer.cornerRadius = 7;
    myView.layer.masksToBounds = YES;
    [self addSubview:myView];
    
//    NSArray *array = [NSArray arrayWithObjects:@"外卖", @"餐饮娱乐", @"便民服务", @"宾馆洗浴", @"其他", nil];
    for (int i = 0; i < self.typeArray.count; i++) {
        UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake(myView.frame.size.width/5 * i, 0, myView.frame.size.width/5, myView.frame.size.height)];
        TypeModle *typeModel=[self.typeArray objectAtIndex:i];
        [button setTitle:typeModel.name forState:UIControlStateNormal];
        [button setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [button.titleLabel setFont:[UIFont systemFontOfSize:15]];
        [button.titleLabel setFont:[UIFont boldSystemFontOfSize:15]];
        [button setBackgroundColor:[UIColor clearColor]];
        button.tag = i + 100;
        [myView addSubview:button];
        if (i == 0) {
            [button setBackgroundColor:[UIColor colorWithWhite:0 alpha:0.2]];
        }
        
        [self.buttonArray addObject:button];
    }
    
    /**
     *  创建tableview
     */
    
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, self.scroll.frame.origin.y + self.scroll.frame.size.height + 40, SCREEN_WIDTH, SCREEN_HEIGHT - (self.scroll.frame.origin.y + self.scroll.frame.size.height + 40 + 64)) style:UITableViewStylePlain];
//    [self.tableView setBackgroundColor:[UIColor blueColor]];
    [self.tableView registerClass:[StoreTableViewCell class] forCellReuseIdentifier:@"cell"];
    [self.tableView setSeparatorStyle:UITableViewCellSeparatorStyleNone];
    self.tableView.tableFooterView = [[UIView alloc] init];

    [self addSubview:self.tableView];
   
    
}





@end
