//
//  LoginViewController.m
//  FasterRunner
//
//  Created by HLKJ on 15-4-27.
//  Copyright (c) 2015年 HLKJ. All rights reserved.
//

#import "LoginViewController.h"
#import "LoginView.h"
#import "GlobalMacro.h"
#import "FindViewController.h"
#import "RegistViewController.h"
#import "Singleton.h"
#import "FindViewController.h"
#import "CustomLoginView.h"
#import "NetworkRequest.h"
#import "URLMacro.h"
#import "RegistViewController.h"
#import "MBProgressHUD.h"
#import <objc/runtime.h>
#import "GlobalMethod.h"

static const void *HttpRequestHUDKey = &HttpRequestHUDKey;

@interface LoginViewController()<UITabBarControllerDelegate>


@end

@implementation LoginViewController
- (instancetype)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        
    }
    return self;
}

- (void)loadView
{
    [super loadView];
    self.login = [[LoginView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
    [self.login createLoginView];
    self.view = self.login;
}
- (void)viewDidLoad
{
    [super viewDidLoad];
    self.navigationItem.title = @"登录";
    
    [self.login.login addTarget:self action:@selector(loginAction:) forControlEvents:UIControlEventTouchUpInside];
    [self.login.forget addTarget:self action:@selector(forgetAction:) forControlEvents:UIControlEventTouchUpInside];
    [self.login.regist addTarget:self action:@selector(registAction:) forControlEvents:UIControlEventTouchUpInside];
    
}

/**
 *  登录
 */
- (void)loginAction:(id)sender
{
    if ([self.login.password.field.text isEqualToString:@""] || self.login.password.field.text == nil || [self.login.userName.field.text isEqualToString:@""] || self.login.userName.field.text == nil ) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"用户名或密码不能为空" message:nil delegate:self cancelButtonTitle:nil otherButtonTitles:nil, nil];
        [alert show];
        [self performSelector:@selector(dismissAlert:) withObject:alert afterDelay:1.5];
    }
    else
    {
        
        [self showHudInView:self.view hint:@"正在登录..."];
        
        
        NSMutableDictionary *para = [NSMutableDictionary dictionary];
        [para setValue:self.login.userName.field.text forKey:@"mobileNo"];
        NSString *pass = [GlobalMethod md5:self.login.password.field.text];
        [para setValue:pass forKey:@"password"];
        [para setValue:@"3" forKey:@"type"];
        [para setValue:@"0" forKey:@"nickName"];
        [para setValue:@"0" forKey:@"sex"];
        [para setValue:@"0" forKey:@"address"];
        [para setValue:@"0" forKey:@"headImg"];
        [NetworkRequest netWorkRequestPOSTWithString:POST_LOGIN_REGIST_FORGET Parameters:para ResponseBlock:^(id result) {
            NSLog(@"%@", result);
            [self notice:result];
        } ErrorBlock:^(id error) {
            NSLog(@"%@", error);
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"登陆超时, 请重新登录" message:nil delegate:self cancelButtonTitle:nil otherButtonTitles:nil, nil];
            [alert show];
            [self performSelector:@selector(dismissAlert:) withObject:alert afterDelay:1.5];
            [self hideHud];
        }];

    }
}



/**
 *  根据result显示结果
 *
 *  @param result
 */
- (void)notice:(id)result
{
    NSDictionary * dic = (NSDictionary *)result;
    NSLog(@"%@", result);
    NSArray *dataArray = [dic objectForKey:@"msg"];
    NSDictionary *myDic = [dataArray firstObject];
    if ([[myDic objectForKey:@"mobileNo"] isEqualToString:@"1"] && [[myDic objectForKey:@"password"] isEqualToString:@"1"]) {
        Singleton *share = [Singleton shareInstance];
        
        //创建标签试图控制器
        UITabBarController *tab = [[UITabBarController alloc] init];
        tab.delegate = self;
        //字
        tab.tabBar.tintColor = green;
        //tab
        tab.tabBar.barTintColor = TabGray;
        
        tab.viewControllers = share.myTabArray;
        [self hideHud];
        [self presentViewController:tab animated:YES completion:nil];
        
        //保存用户id
        NSUserDefaults *user = [NSUserDefaults standardUserDefaults];
        [user setValue:[myDic objectForKeyedSubscript:@"id"] forKey:@"userId"];
        

    }
    else
    {
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"用户名或密码错误" message:nil delegate:self cancelButtonTitle:nil otherButtonTitles:nil, nil];
        [alert show];
        [self hideHud];
        [self performSelector:@selector(dismissAlert:) withObject:alert afterDelay:1.5];
    }
    
}

/**
 *  提示
 *
 *  @return
 */
- (void)dismissAlert:(UIAlertView *)alert
{
    if (alert) {
        [alert dismissWithClickedButtonIndex:[alert cancelButtonIndex] animated:YES];
    }
}


/**
 *  忘记密码
 */

- (void)forgetAction:(id)sender
{
    FindViewController *find = [[FindViewController alloc] init];
    [self.navigationController pushViewController:find animated:YES];
}

/**
 *  注册
 */

- (void)registAction:(id)sender
{
    RegistViewController *regist = [[RegistViewController alloc] init];
    [self.navigationController pushViewController:regist animated:YES];
}


/**
 *  mb 登录进程加载
 *
 *  @param HUD
 */

- (MBProgressHUD *)HUD{
    return objc_getAssociatedObject(self, HttpRequestHUDKey);
}

- (void)setHUD:(MBProgressHUD *)HUD{
    objc_setAssociatedObject(self, HttpRequestHUDKey, HUD, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

/**
 *  显示
 *
 *  @param view
 *  @param hint  (加载显示的内容)
 */
- (void)showHudInView:(UIView *)view hint:(NSString *)hint{
    MBProgressHUD *HUD = [[MBProgressHUD alloc] initWithView:view];
    HUD.labelText = hint;
    [view addSubview:HUD];
    [HUD show:YES];
    [self setHUD:HUD];
}

/**
 *  停止hud
 */
- (void)hideHud{
    [[self HUD] hide:YES];
}
//NSLocalizedString(@"login.ongoing", @"Is Login...")

/**
 *  tabbar delegate
 */
- (void)tabBarController:(UITabBarController *)tabBarController didSelectViewController:(UIViewController *)viewController
{
    
}


- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
}

@end
